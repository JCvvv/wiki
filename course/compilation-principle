# 编译原理

## 引论

编译程序可以分为三大类：

- 翻译器（翻译程序，`translater`）：能将一种语言程序(源语言程序)转换成另一种等价的语言程序(目标语言程序)。
- 编译器（编译程序，`compiler`）：能将一种计算机高级语言程序(源语言程序)转换成另一种等价的计算机低级语言程序(目标语言程序)。
- 解释器（解释程序，`interpreter`）：也是一种翻译程序,以一种语言写的源程序作为输入,但不产生目标代码,而是边解释边执行。

> 编译器与解释器的区别：
>
> 编译分为两步完成，先翻译再运行；解释只需要一步完成，一边解释一遍执行。

编译程序根据编译目标还可以区分为：

- 可变目标编译程序（Retargetable Compiler）
- 交叉编译程序（Cross Cimpiler）

编译程序的组成如下图所示：

![编译程序组成](https://s2.loli.net/2023/09/13/VKlSQX9rtOFHR5N.png)

包括：

- 词法分析：洗去源程序中的空格、换行符等无关字符，按照规则将程序处理为符号序列。
- 语法分析：解析出抽象语法树。
- 语义分析
- 中间代码（IR）生成
- 代码优化
- 代码生成

> 前三个阶段共同完成了对源程序的分析；后三个阶段对源程序进行综合。

## 高级语言及其语法描述

### 程序语言的语法和语义

任何语言均可看作一个集合。这个集合中的每个元素都是在一定**符号集（字母表）**上的一个符号串。

- 对于自然语言来说，它们是定义在某个字母表上的句子的集合。
- 对于程序语言来说，它们也是定义在某个字母表上的句子的集合。这里的句子，就是一个源程序。

**单词符号**是语言中具有独立意义的**最基本单位**。语言的单词符号是由**词法规则**所确定的，即词法规则规定了单词符号的形成规则。

例如：

![语言语法规则示例](https://s2.loli.net/2023/09/13/DXhpf9FdmqCOYN1.png)

**语义**定义程序的意义，没有公认的形式系统描述语义。

高级语言可以分为以下几种：

- 强制式语言（Imperative Language）/ 过程式语言：FORTRAN, C, Pascal
- 应用式语言（Applicative Language）/ 函数式语言：LISP
- 基于规则的语言(Rule-based Language)：Prolog
- 面向对象语言(Object-oriented Language)

### 程序语言的语法描述

根据前面对语言的定义，程序语言首先应该是在符号集上的定义。对于这类符号集，有如下几种：

- 字母表：符号的非空**有限集合**，例如 $\Sigma = \{a, b, c\}$。
- 符号：字母表中的元素，例如 $a, b, c$。
- 符号串：符号的**有穷序列**，例如 $a, aa, abc$。
- 空符号串：无任何符号的符号串（$\epsilon$）。
- 符号串集合：符号串构成的集合。

对于符号串（包括空符号串）和符号串集合，也有一系列类似离散数学中集合运算的运算：

- 符号串相等
- 符号串的长度
- 符号串的连接
- 符号串集合的乘积运算：对于符号串集合 $A, B$，定义
  
    $$
    AB = \{ xy | x \in A, y \in B \}
    $$

    > 可以参考笛卡尔积理解。
- 符号串集合的幂运算
- 符号串集合的正则闭包：
  
  $$
  A^+ = {A^1} \cup {A^2} \cup {A^3} \dotsb {A^n} \cup \dotsb
  $$

- 符号串集合的闭包
  
  $$
  A^* = {A^0} \cup {A^+}
  $$

### 程序语言的文法

**文法**是对语言结构的定义与描述。即从形式上用于描述和规定语言结构的称为“文法”（或称为“语法”）。所谓文法是**在形式上对句子结构的定义与描述**，而未涉及语义问题（详见下面推导句子的示例）。

**语法规则**：我们通过建立一组规则（**产生式**），来描述句子的语法结构。规定用`::=`表示“由……组成”，例如：

![语法规则示例](https://s2.loli.net/2023/09/13/lS7hMZBxr6nTuWR.png)

有了一组产生式之后，可以按照一定的方式用它们**去推导或产生句子**。

> 推导方法：从一个要识别的符号开始推导，即用**相应产生式的右部来替代产生式的左部**，每次仅用一条产生式去进行推导；直到所有带< >的符号都由终结符号替代为止。

关于产生式推导句子，需要注意：

1. 有若干语法成分同时存在时，我们总是从最左的语法成分进行推导，这称之为**最左推导**，类似的有**最右推导（一般推导）**。
2. 从一组产生式可推出不同的句子，如以上产生式还可推出“大象吃象”、“大花生吃象”、“大花生吃花生”等句子，它们**在语法上都正确，但在语义上都不正确**。

用语法树来描述一个句子的语法结构，如下图所示：

![语法树示例](https://s2.loli.net/2023/09/13/IT4vWfz76OVdxgm.png)
